@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">

            <a id="manage" class="nav-link text-dark" 
               asp-area="Identity" 
               asp-page="/Account/Manage/Index" 
               aria-label="Gérer votre compte utilisateur">
                Bonjour @UserManager.GetUserName(User)!
            </a>
        </li>
        <li class="nav-item">

            <form id="logoutForm" class="form-inline m-0 p-0" 
                  asp-area="Identity" 
                  asp-page="/Account/Logout" 
                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })"
                  aria-label="Formulaire de déconnexion">
                <button id="logout" type="submit" 
                        class="nav-link btn btn-link text-dark border-0 p-0"
                        aria-label="Se déconnecter de votre compte">
                    Se déconnecter
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">

            <a class="nav-link text-dark" id="register" 
               asp-area="Identity" 
               asp-page="/Account/Register"
               aria-label="Créer un compte">
                S’inscrire
            </a>
        </li>
        <li class="nav-item">

            <a class="nav-link text-dark" id="login" 
               asp-area="Identity" 
               asp-page="/Account/Login"
               aria-label="Se connecter à votre compte">
                Se connecter
            </a>
        </li>
    }
</ul>

<style>
    .nav-link:focus, 
    .btn:focus {
        outline: 2px solid #B99056;
        outline-offset: 2px;
        border-radius: 4px;
    }
</style>